/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form.borrow;

import com.mysql.cj.jdbc.result.ResultSetMetaData;
import form.books.CreateBook;
import static form.librarians.LibrarianList.getLibrarianList;
import static form.users.UserList.getUserList;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Librarian;
import model.User;
import static utils.Database.connectDB;

/**
 *
 * @author YOGA6
 */
public class BorrowList extends javax.swing.JFrame {

    /**
     * Creates new form BorrowList
     */
    public BorrowList() {
        initComponents();
        fetchBorrow();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        createborrowbutton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        borrowtable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        searchfield = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Danh sách phiếu mượn sách");

        createborrowbutton.setText("Ghi phiếu mượn");
        createborrowbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createborrowbuttonActionPerformed(evt);
            }
        });

        borrowtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Serial sách", "Tên người mượn", "Thủ thư ghi nhận", "Ngày mượn", "Ngày hẹn trả", "Trạng thái"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        borrowtable.setRowHeight(40);
        borrowtable.setSelectionBackground(new java.awt.Color(102, 255, 204));
        jScrollPane1.setViewportView(borrowtable);

        jLabel2.setText("Tìm kiếm");

        searchfield.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchfieldKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(createborrowbutton))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 599, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(235, 235, 235)
                        .addComponent(jLabel1)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(createborrowbutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    private void createborrowbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createborrowbuttonActionPerformed
        // TODO add your handling code here:
        close();
        CreateBorrow cb = new CreateBorrow();
        cb.setVisible(true);
    }//GEN-LAST:event_createborrowbuttonActionPerformed

    
    private void searchfieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchfieldKeyReleased
        // TODO add your handling code here:
        String searchKey = searchfield.getText();
        search(searchKey);
    }//GEN-LAST:event_searchfieldKeyReleased
    private void fetchBorrow() {
        try {
            try (Connection c = connectDB()) {
                ResultSet rs = c.createStatement().executeQuery("SELECT * FROM borrow");
                DefaultTableModel model = (DefaultTableModel) borrowtable.getModel();
                String bookDetailID;
                String borrowerName;
                String librarianName;
                String borrowDate;
                String dueDate;
                String status = null;
                while (rs.next()) {
                    int bookdetail_id = rs.getInt(2);
                    bookDetailID = String.valueOf(bookdetail_id);
                    //get borrower name
                    List<User> userList = getUserList();
                    User user = null;
                    for (User u : userList) {
                        if (u.getId() == rs.getInt(3)){
                            user = u;
                        }
                    }
                    borrowerName = user.getName();
                    //get librarian name
                    List<Librarian> librarianList = getLibrarianList();
                    Librarian librarian = null;
                    for (Librarian l : librarianList) {
                        if (l.getId() == rs.getInt(4)) {
                            librarian = l;
                        }
                    }
                    librarianName = librarian.getFirstname() + librarian.getLastname();
                    //get date
                    borrowDate = rs.getString(5);
                    dueDate = rs.getString(6);
                    //get status
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                    try {
                        Date bDate = sdf.parse(borrowDate);
                        Date dDate = sdf.parse(dueDate);
                        long difference_In_Time = dDate.getTime() - bDate.getTime();
                        long difference_In_Days
                                = (difference_In_Time
                                / (1000 * 60 * 60 * 24))
                                % 365;
                        if (difference_In_Days > 0) {
                            status = "Đang mượn";
                        } else {
                            status = "Quá hạn";
                        }
                    } catch (ParseException e) {
                    }
                    String[] row = {bookDetailID, borrowerName, librarianName, borrowDate, dueDate, status};
                    model.addRow(row);
                }
            }
            
                  
        } catch (SQLException ex) {
            Logger.getLogger(BorrowList.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void search(String key) {
        DefaultTableModel model = (DefaultTableModel) borrowtable.getModel();
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<>(model);
        borrowtable.setRowSorter(trs);
        trs.setRowFilter(RowFilter.regexFilter(key));
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BorrowList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BorrowList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BorrowList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BorrowList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BorrowList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable borrowtable;
    private javax.swing.JButton createborrowbutton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField searchfield;
    // End of variables declaration//GEN-END:variables
}
