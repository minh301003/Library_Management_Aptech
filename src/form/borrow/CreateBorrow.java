/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form.borrow;

import static form.users.UserList.getUserList;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.User;

import utils.Database;
import static utils.Database.connectDB;

/**
 *
 * @author YOGA6
 */
public class CreateBorrow extends javax.swing.JFrame {

    /**
     * Creates new form Borrow
     */
    
    public CreateBorrow() {
        initComponents();
        createBorrowForm();
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jRadioButton1 = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        bookdetailID = new form.suggestion_combo.ComboBoxSuggestion();
        jLabel4 = new javax.swing.JLabel();
        booktitle = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        bookpart = new javax.swing.JTextField();
        bookstatus = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        authorList = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        duedate = new com.toedter.calendar.JDateChooser();
        borrowdate = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        createborrowbutton = new javax.swing.JButton();
        cancelbutton = new javax.swing.JButton();

        jRadioButton1.setText("jRadioButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Phiếu mượn sách");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setText("Mã Serial");

        bookdetailID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookdetailIDActionPerformed(evt);
            }
        });

        jLabel4.setText("Tiêu đề sách");

        booktitle.setEditable(false);

        jLabel6.setText("Phần");

        bookpart.setEditable(false);

        bookstatus.setEditable(false);

        jLabel7.setText("Trạng thái sách");

        jLabel13.setText("Tác giả");

        jScrollPane1.setViewportView(authorList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(jLabel13))
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bookdetailID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(booktitle)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                    .addComponent(bookpart)
                    .addComponent(bookstatus))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(bookdetailID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(booktitle, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bookpart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(bookstatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(117, 117, 117))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Tên người mượn");

        jLabel10.setText("Email");

        jLabel11.setText("Số điện thoại");

        jLabel12.setText("Ngày trả");

        duedate.setDateFormatString("yyyy-MM-dd");
        duedate.setMinSelectableDate(new java.util.Date());

        borrowdate.setDateFormatString("yyyy-MM-dd");

        jLabel14.setText("Ngày mượn");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12))
                            .addComponent(jLabel14))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(borrowdate, javax.swing.GroupLayout.DEFAULT_SIZE, 302, Short.MAX_VALUE)
                            .addComponent(phone)
                            .addComponent(email)
                            .addComponent(duedate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(jLabel11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(borrowdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jLabel12))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(duedate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(112, 112, 112))
        );

        jLabel3.setText("Thông tin sách");

        jLabel8.setText("Thông tin mượn sách");

        createborrowbutton.setText("Xác nhận");
        createborrowbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createborrowbuttonActionPerformed(evt);
            }
        });

        cancelbutton.setText("Hủy");
        cancelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbuttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(154, 154, 154))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(44, 44, 44))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(createborrowbutton)
                .addGap(52, 52, 52)
                .addComponent(cancelbutton)
                .addGap(80, 80, 80))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(118, 118, 118)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(456, 456, 456)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel8))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 334, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createborrowbutton)
                    .addComponent(cancelbutton))
                .addGap(180, 180, 180))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    private void cancelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbuttonActionPerformed
        // TODO add your handling code here:
        close();
        BorrowList bl = new BorrowList();
        bl.setVisible(true);
        
    }//GEN-LAST:event_cancelbuttonActionPerformed

    private String BookDetailID;
    //Get the book id detail and fetch book information
    private void bookdetailIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookdetailIDActionPerformed
        // TODO add your handling code here:
        try { 
            Connection c = connectDB();
            //Get book detail ID (Select books which are not borrowed)
            String availableBookQuery = """
                                   SELECT bookdetail.id FROM bookdetail
                                   LEFT JOIN (SELECT borrow.bookdetail_id FROM borrow
                                              WHERE borrow.returnstatus = 0 AND borrow.duedate > CURRENT_DATE) borrowing
                                   \t\t\tON bookdetail.id = borrowing.bookdetail_id
                                   WHERE borrowing.bookdetail_id IS NULL""";
            ResultSet serialNumberList = c.createStatement().executeQuery(availableBookQuery );
            while (serialNumberList.next()) {
                bookdetailID.addItem(serialNumberList.getString("id"));
            }
            BookDetailID = (String)bookdetailID.getSelectedItem().toString();
            System.out.println(BookDetailID);
            //Get the book title, book part
             String query = """
                            SELECT bookInfo.bookTitleID, bookInfo.booktitle, bookInfo.partNumber, bookdetail.bookstatus
                            FROM bookdetail
                                 INNER JOIN 
                                            (SELECT booktitle.id AS bookTitleID, bookpart.id, booktitle.booktitle, bookpart.partnumber FROM bookpart
                                                    INNER JOIN booktitle
                                                    ON bookpart.booktitle_id = booktitle.id) bookInfo
                                 ON bookdetail.bookpart_id = bookInfo.id
                                 WHERE bookdetail.id = ?""";
            PreparedStatement bookDetailByID = c.prepareStatement(query);
            bookDetailByID.setString(1, BookDetailID);
            ResultSet bookDetailInfo = bookDetailByID.executeQuery();
            String bookTitleID = null;
            while (bookDetailInfo.next()) {
               bookTitleID = bookDetailInfo.getString("bookTitleID");
               booktitle.setText(bookDetailInfo.getString("booktitle"));
               bookpart.setText(bookDetailInfo.getString("partnumber"));
               bookstatus.setText(bookDetailInfo.getString("bookstatus"));
            }
            //Get author list
            DefaultListModel authorModel = new DefaultListModel();
            PreparedStatement authorByID = c.prepareStatement("SELECT authorname FROM author JOIN bookauthor ON author.id = bookauthor.author_id WHERE booktitle_id = ?");
            authorByID.setString(1, bookTitleID);
            ResultSet authorInfo = authorByID.executeQuery();
            while(authorInfo.next()) {
                authorModel.addElement(authorInfo.getString("authorname"));
            }
            authorList.setModel(authorModel);
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
           
        } 
    }//GEN-LAST:event_bookdetailIDActionPerformed
    
    public boolean isValidEmail(String email)
    {
        String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\."+
                            "[a-zA-Z0-9_+&*-]+)*@" +
                            "(?:[a-zA-Z0-9-]+\\.)+[a-z" +
                            "A-Z]{2,7}$";
                              
        Pattern pat = Pattern.compile(emailRegex);
        if (email == null)
            return false;
        return pat.matcher(email).matches();
    }
    public boolean isValidPhoneNumber(String phoneNumber) {
        Pattern pattern = Pattern.compile("^\\d{10}$");
        return pattern.matcher(phoneNumber).matches();
    }
    private void createborrowbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createborrowbuttonActionPerformed
        // TODO add your handling code here:
        try { 
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/library_management_2", "root", "");
            String userEmail = email.getText();
            String userPhone = phone.getText();
            if (!isValidEmail(userEmail)) {
                JOptionPane.showMessageDialog(this, "Email không hợp lệ!");
            } else if(isValidPhoneNumber(userPhone) == false) {
                JOptionPane.showMessageDialog(this, "Số điện thoại chỉ được gồm 10 kí tự số!");
            } else {
                //Insert into db
                //Check if user has been inserted into db
                List<User> userList = getUserList();
                boolean check = false;
                User user = null;
                for (User u : userList) {
                    if (u.getName().equals(name.getText())){
                        check = true;
                        user = u;
                    }
                }
                if (!check){
                   PreparedStatement userInsert = c.prepareStatement("INSERT INTO user (name, email, phone) VALUES(?, ?, ?)");
                   userInsert.setString(1, name.getText());
                   userInsert.setString(2, userEmail);
                   userInsert.setString(3, userPhone);
                   userInsert.executeUpdate();
                } else {
                   PreparedStatement userUpdate = c.prepareStatement("UPDATE user set email = ?, phone= ? WHERE id = ?");
                   userUpdate.setString(1, userEmail);
                   userUpdate.setString(2, userPhone);
                   userUpdate.setInt(3, user.getId());
                   userUpdate.executeUpdate();
                }
                //Insert into borrow table
                PreparedStatement borrowInsert = c.prepareStatement("INSERT INTO borrow (bookdetail_id, user_id, librarian_id, borrowdate, duedate) VALUES(?, ?, ?, DATE ?, DATE ?)");
                borrowInsert.setInt(1, Integer.parseInt(BookDetailID));
                PreparedStatement getUserId = c.prepareStatement("SELECT id FROM user WHERE name = ?");
                getUserId.setString(1, name.getText());
                ResultSet getUserIdKey = getUserId.executeQuery();
                int userID = 0;
                while (getUserIdKey.next()) {
                   userID = getUserIdKey.getInt("id");
                }
                borrowInsert.setInt(2, userID);
                borrowInsert.setInt(3, 1);
                borrowInsert.setString(4, ((JTextField)borrowdate.getDateEditor().getUiComponent()).getText());
                borrowInsert.setString(5, ((JTextField)duedate.getDateEditor().getUiComponent()).getText());
                borrowInsert.executeUpdate();
                
                //Refresh form and show successful alert
                JOptionPane.showMessageDialog(this, "Ghi nhận phiếu mượn thành công!");
                name.setText("");
                email.setText("");
                phone.setText("");
            }
                    
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
           
        } 
    }//GEN-LAST:event_createborrowbuttonActionPerformed
    
    private void createBorrowForm() {
        try { 
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/library_management_2", "root", "");
            //Get book detail ID
            ResultSet serialNumberList = c.createStatement().executeQuery("SELECT id FROM bookdetail");
            while (serialNumberList.next()) {
                bookdetailID.addItem(serialNumberList.getString("id"));
            }
            BookDetailID = (String)bookdetailID.getSelectedItem().toString();
            
            //Set current date for borrow date
            borrowdate.setDate(new Date());
            
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
           
        } 
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) { 
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CreateBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CreateBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CreateBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CreateBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new CreateBorrow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> authorList;
    private form.suggestion_combo.ComboBoxSuggestion bookdetailID;
    private javax.swing.JTextField bookpart;
    private javax.swing.JTextField bookstatus;
    private javax.swing.JTextField booktitle;
    private com.toedter.calendar.JDateChooser borrowdate;
    private javax.swing.JButton cancelbutton;
    private javax.swing.JButton createborrowbutton;
    private com.toedter.calendar.JDateChooser duedate;
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField phone;
    // End of variables declaration//GEN-END:variables
}
