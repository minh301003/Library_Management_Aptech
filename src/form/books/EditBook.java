/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package form.books;


import form.borrow.BorrowList;
import form.dashboard.DashBoard;
import form.librarians.LibrarianList;
import static form.login.Login.Admin;
import form.returns.ReturnList;
import form.users.UserList;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import utils.Database;
import static utils.Database.connectDB;

/**
 *
 * @author YOGA6
 */
public class EditBook extends javax.swing.JFrame {

    private String ID;

    public String getID() {
        return ID;
    }

    public void setID(String ID) {
        this.ID = ID;
    }
    public EditBook(String id) {
        this.ID = id;
        initComponents();
        fetchBookTitleByID();
        fetchAuthor();
        fetchGenre();
        fetchBookPart();
    }
    /**
     * Creates new form EditBook
     */
    public EditBook() {
        initComponents();
    }
    DefaultListModel authorModel = new DefaultListModel();
    DefaultListModel genreModel = new DefaultListModel();
    //number of parts before update;
    int partNum;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        dashboard = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        booklist = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        borrowlist = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        returnlist = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        librarianlist = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        userlist = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        publishername = new javax.swing.JComboBox<>();
        booktitle = new javax.swing.JTextField();
        publishedyear = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        updateBook = new javax.swing.JButton();
        cancelbutton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        authorList = new javax.swing.JList<>();
        jLabel8 = new javax.swing.JLabel();
        authorField = new javax.swing.JTextField();
        addAuthorButton = new javax.swing.JButton();
        updateAuthorButton = new javax.swing.JButton();
        deleteAuthorButton = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        genreList = new javax.swing.JList<>();
        jLabel9 = new javax.swing.JLabel();
        genreField = new javax.swing.JTextField();
        addGenreButton = new javax.swing.JButton();
        updateGenreButton = new javax.swing.JButton();
        deleteGenreButton = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        parts = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        quantity = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel3MouseExited(evt);
            }
        });
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        dashboard.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        dashboard.setForeground(new java.awt.Color(255, 255, 255));
        dashboard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/home-3-32.png"))); // NOI18N
        dashboard.setText("Trang chủ");
        dashboard.setIconTextGap(12);
        dashboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardMouseClicked(evt);
            }
        });
        jPanel3.add(dashboard, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 30));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 210, 240, 70));

        jPanel4.setBackground(new java.awt.Color(0, 102, 102));
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel4MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel4MouseExited(evt);
            }
        });
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        booklist.setBackground(new java.awt.Color(255, 255, 255));
        booklist.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        booklist.setForeground(new java.awt.Color(255, 255, 255));
        booklist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/book-stack-32.png"))); // NOI18N
        booklist.setText("Quản lý kho sách");
        booklist.setIconTextGap(12);
        booklist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                booklistMouseClicked(evt);
            }
        });
        jPanel4.add(booklist, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 240, 70));

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel5MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel5MouseExited(evt);
            }
        });
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        borrowlist.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        borrowlist.setForeground(new java.awt.Color(255, 255, 255));
        borrowlist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/list-2-32.png"))); // NOI18N
        borrowlist.setText("Quản lý mượn sách");
        borrowlist.setIconTextGap(12);
        borrowlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                borrowlistMouseClicked(evt);
            }
        });
        jPanel5.add(borrowlist, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 240, 70));

        jPanel6.setBackground(new java.awt.Color(0, 102, 102));
        jPanel6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel6MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel6MouseExited(evt);
            }
        });
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        returnlist.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        returnlist.setForeground(new java.awt.Color(255, 255, 255));
        returnlist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/arrow-96-32.png"))); // NOI18N
        returnlist.setText("Quản lý trả sách");
        returnlist.setIconTextGap(12);
        returnlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnlistMouseClicked(evt);
            }
        });
        jPanel6.add(returnlist, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 170, 40));

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 420, 240, 70));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/administrator-64.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 70, 80));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Quản lý thư viện");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 140, -1, -1));

        jPanel7.setBackground(new java.awt.Color(0, 102, 102));
        jPanel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel7MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel7MouseExited(evt);
            }
        });
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        librarianlist.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        librarianlist.setForeground(new java.awt.Color(255, 255, 255));
        librarianlist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/contacts-32.png"))); // NOI18N
        librarianlist.setText("Quản lý nhân viên");
        librarianlist.setIconTextGap(12);
        librarianlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                librarianlistMouseClicked(evt);
            }
        });
        jPanel7.add(librarianlist, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 180, 40));

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 240, 70));

        jPanel8.setBackground(new java.awt.Color(0, 102, 102));
        jPanel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jPanel8MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jPanel8MouseExited(evt);
            }
        });
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userlist.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        userlist.setForeground(new java.awt.Color(255, 255, 255));
        userlist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/user-5-32.png"))); // NOI18N
        userlist.setText("Quản lý người mượn");
        userlist.setIconTextGap(12);
        userlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userlistMouseClicked(evt);
            }
        });
        jPanel8.add(userlist, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 200, 40));

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 560, 240, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 240, 768));

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Cập nhật thông tin");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 40, -1, -1));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        publishername.setEditable(true);
        publishername.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel9.add(publishername, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 180, 30));

        booktitle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        booktitle.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 153, 153)));
        jPanel9.add(booktitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 180, 30));

        publishedyear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        publishedyear.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 153, 153)));
        publishedyear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                publishedyearActionPerformed(evt);
            }
        });
        jPanel9.add(publishedyear, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 180, 30));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 153));
        jLabel3.setText("Xuất bản  ");
        jPanel9.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 153, 153));
        jLabel10.setText("Tiêu đề sách");
        jPanel9.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 56, -1, 20));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 153));
        jLabel4.setText("Nhà xuất bản");
        jPanel9.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, -1, -1));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 153, 153));
        jLabel14.setText("Năm xuất bản");
        jPanel9.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, 20));

        jPanel2.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 120, 330, 190));

        updateBook.setBackground(new java.awt.Color(0, 102, 102));
        updateBook.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        updateBook.setForeground(new java.awt.Color(255, 255, 255));
        updateBook.setText("Xác nhận");
        updateBook.setBorder(null);
        updateBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateBookMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateBookMouseExited(evt);
            }
        });
        updateBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBookActionPerformed(evt);
            }
        });
        jPanel2.add(updateBook, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 530, 115, 50));

        cancelbutton.setBackground(new java.awt.Color(0, 102, 102));
        cancelbutton.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        cancelbutton.setForeground(new java.awt.Color(255, 255, 255));
        cancelbutton.setText("Hủy");
        cancelbutton.setBorder(null);
        cancelbutton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cancelbuttonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cancelbuttonMouseExited(evt);
            }
        });
        cancelbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelbuttonActionPerformed(evt);
            }
        });
        jPanel2.add(cancelbutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 530, 115, 50));

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        authorList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        authorList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                authorListMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(authorList);

        jPanel10.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 220, 70));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 153));
        jLabel8.setText("Tác giả");
        jPanel10.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 10, -1, -1));

        authorField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        authorField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 153, 153)));
        jPanel10.add(authorField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 220, 30));

        addAuthorButton.setBackground(new java.awt.Color(0, 153, 153));
        addAuthorButton.setForeground(new java.awt.Color(255, 255, 255));
        addAuthorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/plus-7-24.png"))); // NOI18N
        addAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAuthorButtonActionPerformed(evt);
            }
        });
        jPanel10.add(addAuthorButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 32, 32));

        updateAuthorButton.setBackground(new java.awt.Color(0, 153, 153));
        updateAuthorButton.setForeground(new java.awt.Color(255, 255, 255));
        updateAuthorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/available-updates-24.png"))); // NOI18N
        updateAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAuthorButtonActionPerformed(evt);
            }
        });
        jPanel10.add(updateAuthorButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 32, 32));

        deleteAuthorButton.setBackground(new java.awt.Color(0, 153, 153));
        deleteAuthorButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteAuthorButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/minus-4-24.png"))); // NOI18N
        deleteAuthorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAuthorButtonActionPerformed(evt);
            }
        });
        jPanel10.add(deleteAuthorButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 32, 32));

        jPanel2.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 330, 190));

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        genreList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        genreList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                genreListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(genreList);

        jPanel11.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 220, 70));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 153, 153));
        jLabel9.setText("Thể loại");
        jPanel11.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, -1, -1));

        genreField.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        genreField.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 153, 153)));
        jPanel11.add(genreField, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, 220, 30));

        addGenreButton.setBackground(new java.awt.Color(0, 153, 153));
        addGenreButton.setForeground(new java.awt.Color(255, 255, 255));
        addGenreButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/plus-7-24.png"))); // NOI18N
        addGenreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addGenreButtonActionPerformed(evt);
            }
        });
        jPanel11.add(addGenreButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 50, 32, 32));

        updateGenreButton.setBackground(new java.awt.Color(0, 153, 153));
        updateGenreButton.setForeground(new java.awt.Color(255, 255, 255));
        updateGenreButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/available-updates-24.png"))); // NOI18N
        updateGenreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateGenreButtonActionPerformed(evt);
            }
        });
        jPanel11.add(updateGenreButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 32, 32));

        deleteGenreButton.setBackground(new java.awt.Color(0, 153, 153));
        deleteGenreButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteGenreButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/minus-4-24.png"))); // NOI18N
        deleteGenreButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteGenreButtonActionPerformed(evt);
            }
        });
        jPanel11.add(deleteGenreButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 130, 32, 32));

        jPanel2.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 330, 190));

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 153));
        jLabel6.setText("Phần");
        jPanel12.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        parts.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel12.add(parts, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 50, -1, -1));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 153, 153));
        jLabel12.setText("Số lượng mỗi phần");
        jPanel12.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, -1, -1));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 153, 153));
        jLabel13.setText("Số phần");
        jPanel12.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        quantity.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel12.add(quantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, -1, -1));

        jPanel2.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 330, 190));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 0, 784, 768));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     public void close() {
        WindowEvent closeWindow = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(closeWindow);
    }
    private void dashboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardMouseClicked
        close();
        DashBoard db = new DashBoard();
        db.setVisible(true);
    }//GEN-LAST:event_dashboardMouseClicked

    private void jPanel3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseEntered
        Color color = new Color(0,153,153);
        jPanel3.setBackground(color);
    }//GEN-LAST:event_jPanel3MouseEntered

    private void jPanel3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseExited
        Color color = new Color(0,102,102);
        jPanel3.setBackground(color);
    }//GEN-LAST:event_jPanel3MouseExited

    private void booklistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_booklistMouseClicked
        close();
        BookList bkl = new BookList();
        bkl.setVisible(true);
    }//GEN-LAST:event_booklistMouseClicked

    private void jPanel4MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseEntered
        Color color = new Color(0,153,153);
        jPanel4.setBackground(color);
    }//GEN-LAST:event_jPanel4MouseEntered

    private void jPanel4MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseExited
        Color color = new Color(0,102,102);
        jPanel4.setBackground(color);
    }//GEN-LAST:event_jPanel4MouseExited

    private void borrowlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_borrowlistMouseClicked
        close();
        BorrowList bl = new BorrowList();
        bl.setVisible(true);
    }//GEN-LAST:event_borrowlistMouseClicked

    private void jPanel5MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseEntered
        Color color = new Color(0,153,153);
        jPanel5.setBackground(color);
    }//GEN-LAST:event_jPanel5MouseEntered

    private void jPanel5MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseExited
        Color color = new Color(0,102,102);
        jPanel5.setBackground(color);
    }//GEN-LAST:event_jPanel5MouseExited

    private void returnlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnlistMouseClicked
        close();
        ReturnList rl = new ReturnList();
        rl.setVisible(true);
    }//GEN-LAST:event_returnlistMouseClicked

    private void jPanel6MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseEntered
        Color color = new Color(0,153,153);
        jPanel6.setBackground(color);
    }//GEN-LAST:event_jPanel6MouseEntered

    private void jPanel6MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel6MouseExited
        Color color = new Color(0,102,102);
        jPanel6.setBackground(color);
    }//GEN-LAST:event_jPanel6MouseExited

    private void librarianlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_librarianlistMouseClicked
         if (Admin.getLevel() == 1) {
            close();
            LibrarianList ll = new LibrarianList();
            ll.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "Bạn không có quyền truy cập vào phần này!");
        }
    }//GEN-LAST:event_librarianlistMouseClicked

    private void jPanel7MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseEntered
        Color color = new Color(0,153,153);
        jPanel7.setBackground(color);
    }//GEN-LAST:event_jPanel7MouseEntered

    private void jPanel7MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel7MouseExited
        Color color = new Color(0,102,102);
        jPanel7.setBackground(color);
    }//GEN-LAST:event_jPanel7MouseExited

    private void userlistMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userlistMouseClicked
        close();
        UserList ul = new UserList();
        ul.setVisible(true);
    }//GEN-LAST:event_userlistMouseClicked

    private void jPanel8MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseEntered
        Color color = new Color(0,153,153);
        jPanel8.setBackground(color);
    }//GEN-LAST:event_jPanel8MouseEntered

    private void jPanel8MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel8MouseExited
        Color color = new Color(0,102,102);
        jPanel8.setBackground(color);
    }//GEN-LAST:event_jPanel8MouseExited

    private void updateBookMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBookMouseEntered
        Color color = new Color(0,51,51);
        updateBook.setBackground(color);
    }//GEN-LAST:event_updateBookMouseEntered

    private void updateBookMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateBookMouseExited
        Color color = new Color(0,102,102);
        updateBook.setBackground(color);
    }//GEN-LAST:event_updateBookMouseExited

    private void cancelbuttonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelbuttonMouseEntered
        Color color = new Color(0,51,51);
        cancelbutton.setBackground(color);
    }//GEN-LAST:event_cancelbuttonMouseEntered

    private void cancelbuttonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelbuttonMouseExited
        Color color = new Color(0,102,102);
        cancelbutton.setBackground(color);
    }//GEN-LAST:event_cancelbuttonMouseExited

    private void cancelbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelbuttonActionPerformed
        // TODO add your handling code here:
        close();
        BookList bkl = new BookList();
        bkl.setVisible(true);
    }//GEN-LAST:event_cancelbuttonActionPerformed
    //add a new author
    private void addAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAuthorButtonActionPerformed
        authorList.setModel(authorModel);
        String newAuthor = authorField.getText();
        
        //Insert new author into author table
        try {
            Connection c = connectDB();
            PreparedStatement authorInsert = c.prepareStatement("INSERT INTO author (authorname) VALUES(?)");
            authorInsert.setString(1, newAuthor);
            authorInsert.executeUpdate();
            PreparedStatement authorCheck = c.prepareStatement("SELECT id FROM author WHERE authorname = ?");
            authorCheck.setString(1, newAuthor);
            ResultSet authorKey = authorCheck.executeQuery();
            String authorID;
            while (authorKey.next()) {
               authorID = authorKey.getString("id");
               //Insert into bookauthor table
               PreparedStatement bookAuthorInsert = c.prepareStatement("INSERT INTO bookauthor (booktitle_id, author_id) VALUES(?, ?)");
               bookAuthorInsert.setString(1, this.ID);
               bookAuthorInsert.setString(2, authorID);
               bookAuthorInsert.executeUpdate();             
            }
            //Refresh form and show successful alert
            JOptionPane.showMessageDialog(this, "Thêm tác giả mới thành công!");
            authorModel.addElement(newAuthor);
            authorField.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_addAuthorButtonActionPerformed
    //update author name
    private void updateAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAuthorButtonActionPerformed
        int index = authorList.getSelectedIndex();
        String preAuthor = (String) authorModel.getElementAt(index);
        String updateAuthor = authorField.getText();
        System.out.println(preAuthor);
        System.out.println(updateAuthor);
        try {
            Connection c = connectDB();
            //get the id of pre author
            PreparedStatement authorCheck = c.prepareStatement("SELECT id FROM author WHERE authorname = ?");
            authorCheck.setString(1, preAuthor);
            ResultSet authorKey = authorCheck.executeQuery();
            int authorID;
            while (authorKey.next()) {
                authorID = authorKey.getInt("id");
               //Update author name
                PreparedStatement authorUpdate = c.prepareStatement("UPDATE author SET authorname = ? WHERE id = ?");
                authorUpdate.setString(1, updateAuthor);
                authorUpdate.setInt(2, authorID);
                authorUpdate.executeUpdate();          
            }
            //Refresh form and show successful alert
            JOptionPane.showMessageDialog(this, "Cập nhật tác giả mới thành công!");
            authorModel.setElementAt(authorField.getText(), index);
            authorField.setText("");
            
        }catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_updateAuthorButtonActionPerformed
    //delete an author
    private void deleteAuthorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAuthorButtonActionPerformed
        int index = authorList.getSelectedIndex();
        String deleteAuthor = (String) authorModel.getElementAt(index);
        try {
            Connection c = connectDB();
            //get the id of author
            PreparedStatement authorCheck = c.prepareStatement("SELECT id FROM author WHERE authorname = ?");
            authorCheck.setString(1, deleteAuthor);
            ResultSet authorKey = authorCheck.executeQuery();
            String authorID;
            while (authorKey.next()) {
                authorID = authorKey.getString("id");
               //Delete bookauthor 
                PreparedStatement bookAuthorDelete = c.prepareStatement("DELETE FROM bookauthor WHERE booktitle_id = ? AND author_id = ?");
                bookAuthorDelete.setString(1, this.ID);
                bookAuthorDelete.setString(2, authorID);
                bookAuthorDelete.executeUpdate();          
            }
            //Refresh form and show successful alert
            JOptionPane.showMessageDialog(this, "Xóa tác giả mới thành công!");
            authorModel.removeElementAt(index);
            authorField.setText("");
            
        }catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        } 
        
    }//GEN-LAST:event_deleteAuthorButtonActionPerformed
    //Get selected author for update
    private void authorListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_authorListMouseClicked
        String selectedAuthor = authorList.getSelectedValue();
        authorField.setText(selectedAuthor);
    }//GEN-LAST:event_authorListMouseClicked

    private void addGenreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addGenreButtonActionPerformed
        genreList.setModel(genreModel);
        String newGenre = genreField.getText();
        
        //Insert new genre into genre table
        try {
            Connection c = connectDB();
            PreparedStatement genreInsert = c.prepareStatement("INSERT INTO genre (genre) VALUES(?)");
            genreInsert.setString(1, newGenre);
            genreInsert.executeUpdate();
            PreparedStatement genreCheck = c.prepareStatement("SELECT id FROM genre WHERE genre = ?");
            genreCheck.setString(1, newGenre);
            ResultSet genreKey = genreCheck.executeQuery();
            String genreID;
            while (genreKey.next()) {
               genreID = genreKey.getString("id");
               //Insert into bookgenre table
               PreparedStatement bookGenreInsert = c.prepareStatement("INSERT INTO bookgenre (booktitle_id, genre_id) VALUES(?, ?)");
               bookGenreInsert.setString(1, this.ID);
               bookGenreInsert.setString(2, genreID);
               bookGenreInsert.executeUpdate();             
            }
            //Refresh form and show successful alert
            JOptionPane.showMessageDialog(this, "Thêm thể loại mới thành công!");
            genreModel.addElement(newGenre);
            genreField.setText("");
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_addGenreButtonActionPerformed

    private void deleteGenreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteGenreButtonActionPerformed
        int index = genreList.getSelectedIndex();
        String deleteGenre = (String) genreModel.getElementAt(index);
        try {
            Connection c = connectDB();
            //get the id of genre
            PreparedStatement genreCheck = c.prepareStatement("SELECT id FROM genre WHERE genrename = ?");
            genreCheck.setString(1, deleteGenre);
            ResultSet genreKey = genreCheck.executeQuery();
            String genreID;
            while (genreKey.next()) {
                genreID = genreKey.getString("id");
               //Delete bookgenre
                PreparedStatement bookGenreDelete = c.prepareStatement("DELETE FROM bookgenre WHERE booktitle_id = ? AND genre_id = ?");
                bookGenreDelete.setString(1, this.ID);
                bookGenreDelete.setString(2, genreID);
                bookGenreDelete.executeUpdate();          
            }
            //Refresh form and show successful alert
            JOptionPane.showMessageDialog(this, "Xóa thể loại mới thành công!");
            genreModel.removeElementAt(index);
            genreField.setText("");
            
        }catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }//GEN-LAST:event_deleteGenreButtonActionPerformed
    
    private void updateGenreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateGenreButtonActionPerformed
        int index = genreList.getSelectedIndex();
        String preGenre = (String) genreModel.getElementAt(index);
        String updateGenre = genreField.getText();

        try {
            Connection c = connectDB();
            //get the id of pre genre
            PreparedStatement genreCheck = c.prepareStatement("SELECT id FROM genre WHERE genre = ?");
            genreCheck.setString(1, preGenre);
            ResultSet genreKey = genreCheck.executeQuery();
            int genreID;
            while (genreKey.next()) {
                genreID = genreKey.getInt("id");
                //Update genre name
                PreparedStatement genreUpdate = c.prepareStatement("UPDATE genre SET genre = ? WHERE id = ?");
                genreUpdate.setString(1, updateGenre);
                genreUpdate.setInt(2, genreID);
                genreUpdate.executeUpdate();
            }
            //Refresh form and show successful alert
            JOptionPane.showMessageDialog(this, "Cập nhật thể loại mới thành công!");
            genreModel.setElementAt(genreField.getText(), index);
            genreField.setText("");

        }catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateGenreButtonActionPerformed

    private void genreListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_genreListMouseClicked
        String selectedGenre = genreList.getSelectedValue();
        genreField.setText(selectedGenre);
    }//GEN-LAST:event_genreListMouseClicked

    private void updateBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBookActionPerformed
        try {
            Connection c = connectDB();
            String updateBookTitle = booktitle.getText();
            String updatePublishedYear = publishedyear.getText();
            String updatePublisher = (String) publishername.getSelectedItem();
            int newParts = (Integer) parts.getValue();
            int Quantity = (Integer) quantity.getValue();
            //update part and quantity
            if (newParts > partNum) {
                //insert new part into bookpart
                ArrayList<Integer> bookPartIDList = new ArrayList<Integer>();
                for (int i = (partNum + 1); i <= newParts; i++) {
                    PreparedStatement bookPartInsert = c.prepareStatement("INSERT INTO bookpart (booktitle_id, partnumber) VALUES(?, ?)", Statement.RETURN_GENERATED_KEYS);
                    bookPartInsert.setString(1, this.ID);
                    bookPartInsert.setInt(2, i);
                    bookPartInsert.executeUpdate();
                    //Get booktitle_id inorder to insert later 
                    ResultSet bookPartKey = bookPartInsert .getGeneratedKeys();
                    while (bookPartKey .next()) {
                        bookPartIDList.add(bookPartKey.getInt(1));
                    }
                }
                //Insert into book detail table
                for (int bookPartID : bookPartIDList) {
                    for (int i = 0; i < Quantity; i++) {
                        PreparedStatement bookDetailInsert = c.prepareStatement("INSERT INTO bookdetail (bookpart_id) VALUES(?)");
                        bookDetailInsert.setInt(1, bookPartID);
                        bookDetailInsert.executeUpdate();
                    }
                }
            }
            //update into book title table
            String query = "UPDATE booktitle SET booktitle = ?, publishedyear = ?, publisher_id = ? WHERE id = ?";
            PreparedStatement bookTitleUpdate = c.prepareStatement(query);
            bookTitleUpdate.setString(1, updateBookTitle);
            bookTitleUpdate.setString(2, updatePublishedYear);
            PreparedStatement publisherCheck = c.prepareStatement("SELECT id FROM publisher WHERE publishername = ?");
            publisherCheck.setString(1, updatePublisher);
            ResultSet publisherIDKey = publisherCheck.executeQuery();
            int publisherID = 0;
            while (publisherIDKey.next()) {
                publisherID = publisherIDKey.getInt("id");
            }
            bookTitleUpdate.setInt(3, publisherID);
            bookTitleUpdate.setString(4, this.ID);
            bookTitleUpdate.executeUpdate();
            JOptionPane.showMessageDialog(this, "Cập nhật thông tin thành công!");
            
             
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_updateBookActionPerformed

    private void publishedyearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_publishedyearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_publishedyearActionPerformed
    private void fetchAuthor() {
        try {
            Connection c = connectDB();
            PreparedStatement authorByID = c.prepareStatement("SELECT authorname FROM author JOIN bookauthor ON author.id = bookauthor.author_id WHERE booktitle_id = ?");
            authorByID.setString(1, this.ID);
            ResultSet authorInfo = authorByID.executeQuery();
            while(authorInfo.next()) {
                authorModel.addElement(authorInfo.getString("authorname"));
            }
            authorList.setModel(authorModel);
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void fetchPublisher() {
        try {
            Connection c = connectDB();
            ResultSet publisherList = c.createStatement().executeQuery("Select publishername from publisher");
            while (publisherList.next()) {
                String publisher = publisherList.getString("publishername");
                publishername.addItem(publisher);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    } 
    private void fetchGenre() {
        try {
            Connection c = connectDB();
            PreparedStatement genreByID = c.prepareStatement("SELECT genre FROM genre JOIN bookgenre ON genre.id = bookgenre.genre_id WHERE booktitle_id = ?");
            genreByID.setString(1, this.ID);
            ResultSet genreInfo = genreByID.executeQuery();
            while(genreInfo.next()) {
                genreModel.addElement(genreInfo.getString("genre"));
            }
            genreList.setModel(genreModel);
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void fetchBookPart() {
        try {
            Connection c = connectDB();
            //number of parts
            PreparedStatement partByID = c.prepareStatement("SELECT COUNT(booktitle_id) AS parts FROM bookpart WHERE booktitle_id = ?");
            partByID.setString(1, this.ID);
            ResultSet partInfo = partByID.executeQuery();
            
            while (partInfo.next()) {
                partNum = partInfo.getInt("parts");
            }
            SpinnerNumberModel partModel = new SpinnerNumberModel(partNum, partNum, 100, 1);
            parts.setModel(partModel);
            SpinnerNumberModel quantityModel = new SpinnerNumberModel(1, 1, 100, 1);
            quantity.setModel(quantityModel);
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    private void fetchBookTitleByID() {
        try {
            try (Connection conn = connectDB()) {
                PreparedStatement bookTitleByID = conn.prepareStatement("SELECT * FROM booktitle WHERE id = ?");
                bookTitleByID.setString(1, this.ID);
                ResultSet bookTitleInfo = bookTitleByID.executeQuery();
                
                while (bookTitleInfo.next()) {
                    //booktitle && publishedyear
                    booktitle.setText(bookTitleInfo.getString("booktitle"));
                    publishedyear.setText(bookTitleInfo.getString("publishedyear"));
                    //publisher name
                    fetchPublisher();
                    PreparedStatement publisherByID = conn.prepareStatement("SELECT publishername FROM publisher WHERE id = ?");
                    publisherByID.setString(1, bookTitleInfo.getString("publisher_id"));
                    ResultSet publisherNameInfo = publisherByID.executeQuery();
                    while (publisherNameInfo.next()) {
                        publishername.setSelectedItem(publisherNameInfo.getString("publishername"));
                    }                   
               }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Database.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditBook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAuthorButton;
    private javax.swing.JButton addGenreButton;
    private javax.swing.JTextField authorField;
    private javax.swing.JList<String> authorList;
    private javax.swing.JLabel booklist;
    private javax.swing.JTextField booktitle;
    private javax.swing.JLabel borrowlist;
    private javax.swing.JButton cancelbutton;
    private javax.swing.JLabel dashboard;
    private javax.swing.JButton deleteAuthorButton;
    private javax.swing.JButton deleteGenreButton;
    private javax.swing.JTextField genreField;
    private javax.swing.JList<String> genreList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel librarianlist;
    private javax.swing.JSpinner parts;
    private javax.swing.JTextField publishedyear;
    private javax.swing.JComboBox<String> publishername;
    private javax.swing.JSpinner quantity;
    private javax.swing.JLabel returnlist;
    private javax.swing.JButton updateAuthorButton;
    private javax.swing.JButton updateBook;
    private javax.swing.JButton updateGenreButton;
    private javax.swing.JLabel userlist;
    // End of variables declaration//GEN-END:variables

   
}
